{"version":3,"sources":["item-detail-edit.component.ts"],"names":["ItemDetailEditComponent","itemService","router","activatedRoute","this","prototype","ngOnInit","_this","id","snapshot","params","get","subscribe","item","console","log","item_1","Item","navigate","onInsert","add","data","Id","error","onBack","onItemDetailView","onUpdate","update","onDelete","delete","__decorate","core_1","Component","selector","template","styles","exports_1"],"mappings":"8/BAiEAA,wBAAA,WAGI,QAAAA,yBAAoBC,YAAkCC,OAAwBC,gBAA1DC,KAAAH,YAAAA,YAAkCG,KAAAF,OAAAA,OAAwBE,KAAAD,eAAAA,eA6DlF,MAzDIH,yBAAAK,UAAAC,SAAA,WAAA,GAAAC,OAAAH,KACQI,IAAMJ,KAAKD,eAAeM,SAASC,OAAW,EAE9CF,IACAJ,KAAKH,YAAYU,IAAIH,IAAII,UAAU,SAAAC,MAAQ,MAAAN,OAAKM,KAAOA,OAE3C,IAAPL,IACLM,QAAQC,IAAI,iCACZX,KAAKS,KAAO,GAAIG,QAAAC,KAAK,EAAG,WAAY,QAGpCH,QAAQC,IAAI,uCACZX,KAAKF,OAAOgB,UAAU,OAI9BlB,wBAAAK,UAAAc,SAAA,SAASN,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYmB,IAAIP,MAAMD,UACvB,SAACS,MACGd,MAAKM,KAAOQ,KACZP,QAAQC,IAAI,QAAUR,MAAKM,KAAKS,GAAK,oBACrCf,MAAKL,OAAOgB,UAAU,MAE1B,SAACK,OAAU,MAAAT,SAAQC,IAAIQ,UAI/BvB,wBAAAK,UAAAmB,OAAA,WACIpB,KAAKF,OAAOgB,UAAU,MAG1BlB,wBAAAK,UAAAoB,iBAAA,SAAiBZ,MAEb,MADAT,MAAKF,OAAOgB,UAAU,YAAaL,KAAKS,MACjC,GAGXtB,wBAAAK,UAAAqB,SAAA,SAASb,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAY0B,OAAOd,MAAMD,UAC1B,SAACS,MACGd,MAAKM,KAAOQ,KACZP,QAAQC,IAAI,QAAUR,MAAKM,KAAKS,GAAK,sBACrCf,MAAKL,OAAOgB,UAAU,YAAaX,MAAKM,KAAKS,MAEjD,SAACC,OAAU,MAAAT,SAAQC,IAAIQ,UAI/BvB,wBAAAK,UAAAuB,SAAA,SAASf,MAAT,GAAAN,OAAAH,KACQI,GAAKK,KAAKS,EACdlB,MAAKH,YAAY4B,OAAOrB,IAAII,UACxB,SAACS,MACGP,QAAQC,IAAI,QAAUP,GAAK,sBAC3BD,MAAKL,OAAOgB,UAAU,MAE1B,SAACK,OAAU,MAAAT,SAAQC,IAAIQ,UAtHnCvB,wBAAA8B,YAACC,OAAAC,WACGC,SAAU,cACVC,SAAU,o5GAoDVC,8IAGJC,UAAA,0BAAApC","file":"item-detail-edit.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport {Router, ActivatedRoute} from \"@angular/router\";\r\n\r\nimport {Item} from \"./item\";\r\n\r\nimport {ItemService} from \"./item.service\";\r\n\r\n\r\n@Component({\r\n    selector: \"item-detail\",\r\n    template: ` \r\n        <div *ngIf=\"item\"> \r\n            <h2> \r\n                <a href=\"#\" (click)=\"onBack()\"> \r\n                    &laquo; Back to Home \r\n                </a> \r\n            </h2> \r\n            <div class=\"item-container\"> \r\n                <ul class=\"nav nav-tabs\"> \r\n                    <li role=\"presentation\" class=\"active\"> \r\n                        <a href=\"#\">Edit</a> \r\n                    </li> \r\n                    <li role=\"presentation\" *ngIf=\"item.Id != 0\"> \r\n                        <a href=\"#\" (click)=\"onItemDetailView(item)\">View</a> \r\n                    </li> \r\n                </ul> \r\n                <div class=\"panel panel-default\"> \r\n                    <div class=\"panel-body\"> \r\n                        <form class=\"item-detail-edit\"> \r\n                            <h3>{{item.Title}}</h3> \r\n                            <span class=\"empty-field\" [hidden]=\"dTitle.valid\">Empty Title</span> \r\n                            <div class=\"form-group has-feedback\" [ngClass]=\"{'has-success': dTitle.valid, 'has-error': !dTitle.valid}\"> \r\n                                <label for=\"input-title\">Title</label> \r\n                                <input id=\"input-title\" name=\"input-title\" type=\"text\" class=\"form-control\" [(ngModel)]=\"item.Title\" placeholder=\"Insert the title...\" required #dTitle=\"ngModel\" />\r\n                                <span class=\"glyphicon form-control-feedback\" aria-hidden=\"true\" [ngClass]=\"{'glyphicon-ok': dTitle.valid, 'glyphicon-remove': ! dTitle.valid}\"></span>\r\n                                <div [hidden]=\" dTitle.valid\" class=\"alert alert-danger\">\r\n                                        You need to enter a valid Title.\r\n                                </div>\r\n                            </div> \r\n                            <div class=\"form-group\"> \r\n                                <label for=\"input-description\">Description</label> \r\n                                <textarea id=\"input-description\" name=\"input-description\" class=\"form-control\" [(ngModel)]=\"item.Description\" placeholder=\"Insert a suitable description...\" required></textarea> \r\n                            </div> \r\n                            <div class=\"form-group\"> \r\n                                <label for=\"input-text\">Text</label> \r\n                                <textarea id=\"input-text\" name=\"input-text\" class=\"form-control\" [(ngModel)]=\"item.Text\" placeholder=\"Insert a suitable description...\"></textarea> \r\n                            </div> \r\n                            <div *ngIf=\"item.Id == 0\" class=\"commands insert\"> \r\n                                <input type=\"button\" class=\"btn btn-primary\" value=\"Save\" (click)=\"onInsert(item)\" /> \r\n                                <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onBack()\" /> \r\n                            </div> \r\n                            <div *ngIf=\"item.Id != 0\" class=\"commands update\"> \r\n                                <input type=\"button\" class=\"btn btn-primary\" value=\"Update\" (click)=\"onUpdate(item)\" /> \r\n                                <input type=\"button\" class=\"btn btn-danger\" value=\"Delete\" (click)=\"onDelete(item)\" /> \r\n                                <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onItemDetailView(item)\" /> \r\n                            </div> \r\n                        </form> \r\n                    </div> \r\n                </div> \r\n            </div> \r\n        </div>\r\n    `,\r\n    styles: [ ]\r\n})\r\n\r\nexport class ItemDetailEditComponent {\r\n    item: Item;\r\n\r\n    constructor(private itemService: ItemService, private router: Router, private activatedRoute: ActivatedRoute) {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        let id = +this.activatedRoute.snapshot.params['id'];\r\n\r\n        if (id) {\r\n            this.itemService.get(id).subscribe(item => this.item = item);\r\n        }\r\n        else if (id === 0) {\r\n            console.log(\"id is 0: adding a new item...\");\r\n            this.item = new Item(0, \"New Item\", null);\r\n        }\r\n        else {\r\n            console.log(\"Invalid id: routing back to home...\");\r\n            this.router.navigate([\"\"]);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onItemDetailView(item: Item) {\r\n        this.router.navigate([\"item/view\", item.Id]);\r\n        return false;\r\n    } \r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been updated.\");\r\n                this.router.navigate([\"item/view\", this.item.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        var id = item.Id;\r\n        this.itemService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Item \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n}"]}